// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int           @id @default(autoincrement())
  receiver      String        @db.VarChar(40)
  quantity      Int
  unique_id     String        @unique @db.VarChar(40)
  reference     String        @db.VarChar(40)
  model         String        @db.VarChar(40)
  gate          String        @db.VarChar(40)
  supplier_code String        @db.VarChar(40)
  name          User           @relation(fields: [username], references: [name])
  username      String        @db.VarChar(40)
  status        ProductStatus
  anomly        Anomly        @relation(fields: [anomlyId], references: [id])
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  anomlyId      String        @default("")
  anomalyDescription      String        @default("")
  reported  Boolean  @default(false)
  subProducts  SubProducts[]
  @@unique([id, unique_id])
}

model SubProducts {
  id            Int           @id @default(autoincrement())
  product     Product       @relation(fields: [product_id], references: [unique_id])
  product_id String        @db.VarChar(40)
  subproduct_id  String    @db.VarChar(40)
}

model User {
  id        Int       @id @default(autoincrement())
  name      String    @unique @db.VarChar(40)
  password  String    @db.VarChar(256)
  role      Role      @default(WORKER)
  createdAt DateTime  @default(now())
  product   Product[]
  Anomly    Anomly[]

  @@unique([id, name])
}

enum Role {
  WORKER
  ADMIN
  CONTROLLER
}

enum ProductStatus {
  IN_STOCK
  DAMAGED
  LOST
  INSPECTED
  SHIPPED
  ANOMLY
}

model Token {
  id        Int      @id @default(autoincrement())
  token     String   @db.VarChar(256)
  role      Role
  workerId  Int
  createdAt DateTime @default(now())
}

model Anomly {
  id          String    @id @unique
  description String    @db.VarChar(256)
  worker      User    @relation(fields: [name], references: [name])
  name        String    @db.VarChar(40)
  product     Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
